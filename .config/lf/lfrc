# Luke's lf settings

# Basic vars
set shell bash
set shellopts '-eu'
set ifs "\n"
set scrolloff 10
set color256
set icons
set period 1
set drawbox true
set previewer /home/jah/.local/bin/preview

# Vars that depend on environmental variables
# $lf -remote "send $id set previewer ${XDG_CONFIG_HOME:-$HOME/.config}/lf/scope"

# cmds/functions
cmd open ${{
    case $(file --mime-type $f -b) in
	image/vnd.djvu|application/pdf|application/octet-stream) zathura $fx ;;
	# image/vnd.djvu|application/pdf|application/octet-stream) setsid zathura $fx >/dev/null 2>&1 & ;;
    	text/troff) man ./ $f;;
        text/x-org) emacs $f;;
        text/*) $EDITOR $f;;
	application/json) $EDITOR $fx;;
	image/x-xcf|image/svg+xml) setsid gimp $f >/dev/null 2>&1 & ;;
	image/*) rotdir $f | grep -i "\.\(png\|jpg\|jpeg\|gif\|webp\)\(_large\)*$" | sxiv -aio ;;
	# image/*) rotdir $f | grep -i "\.\(png\|jpg\|jpeg\|gif\|webp\)\(_large\)*$" | setsid sxiv -aio 2>/dev/null | lf-select & ;;
	audio/*) mpv $f ;;
	video/*) setsid mpv $f -quiet >/dev/null 2>&1 & ;;
	application/pdf) setsid zathura $fx >/dev/null 2>&1 & ;;
        *) for f in $fx; do setsid $OPENER $f >/dev/null 2>&1 & done;;
    esac
}}

cmd open_emacs ${{
	# setsid emacsclient -c -a emacs $fx >/dev/null 2>&1 &
	devour emacsclient -c -a emacs $fx
	# emacsclient $f
}}

cmd mkdir $mkdir -p "$(echo $* | tr ' ' '\ ')"

cmd delete ${{
	clear; tput cup $(($(tput lines)/3)); tput bold
	set -f
	printf "%s\n\t" "$fx"
	printf "delete?[y/N]"
	read ans
	[ $ans = "y" ] && rm -rf $fx
}}

cmd moveto ${{
	clear; tput cup $(($(tput lines)/3)); tput bold
	set -f
	clear; echo "Move to where?"
	dest="$(cut -d'	' -f2- ${XDG_CONFIG_HOME:-$HOME/.config}/directories | fzf)" &&
	eval mv -iv $fx $dest &&
	notify-send "ðŸšš File(s) moved." "File(s) moved to $dest."
}}

cmd copyto ${{
	clear; tput cup $(($(tput lines)/3)); tput bold
	set -f
	clear; echo "Copy to where?"
	dest="$(cut -d'	' -f2- ${XDG_CONFIG_HOME:-$HOME/.config}/directories | fzf)" &&
	eval cp -ivr $fx $dest &&
	notify-send "ðŸ“‹ File(s) copied." "File(s) copies to $dest."
}}

cmd bulkrename ${{
    vidir
}}

cmd fzf_jump ${{
	res="$(find . -maxdepth 3 | fzf --reverse --header='Jump to location')"
	if [ -f "$res" ]; then
		cmd="select"
	elif [ -d "$res" ]; then
		cmd="cd"
	fi
	lf -remote "send $id $cmd \"$res\""
}}


# Bindings
map <c-f> $lf -remote "send $id select '$(fzf)'"
map J $lf -remote "send $id cd $(cut -d'	' -f2 ${XDG_CONFIG_HOME:-$HOME/.config}/directories | fzf)"
map gh
map g top
map D delete
map C copyto
map M moveto
map <c-n> push :mkdir<space>
map <c-r> reload
map <enter> shell
map x $$f
map X !$f
map o &mimeopen $f
map O $mimeopen --ask $f
map f fzf_jump
map E open_emacs
map v /usr/bin/emacsclient -c -a emacs "$f"

map A rename # at the very end
map c push A<c-u> # new rename
map I push A<c-a> # at the very beginning
map i push A<a-b><a-b><a-f> # before extention
map a push A<a-b> # after extention
map b bulkrename

map <c-e> down
map <c-y> up
map V push :!nvim<space>
